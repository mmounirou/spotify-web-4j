package com.mmounirou.spoty4j.api;

import static org.fest.assertions.Assertions.assertThat;

import java.io.IOException;

import org.junit.Test;

import com.google.common.base.Function;
import com.google.common.base.Joiner;
import com.google.common.collect.FluentIterable;
import com.mmounirou.spoty4j.core.Album;
import com.mmounirou.spoty4j.core.Artist;

public class OpenTest
{

	@Test
	public void testGetArtistCovertArt() throws IOException
	{
		String keryJamesCoverArt = "http://o.scdn.co/image/728e3ee67969cf1838d7690c9c0f50c871b5af13";
		String artistCovertArt = Open.getArtistCovertArt("spotify:artist:5ydAcIK2KdpBIbL0yGFJle");
		assertThat(artistCovertArt).isEqualTo(keryJamesCoverArt);
	}

	@Test
	public void testGetAlbumCovertArt() throws IOException
	{
		String keryJamesCoverArt = "http://o.scdn.co/image/a3cfcb13b2c83f26b54da2aa3ab7e883d1c27e66";
		String artistCovertArt = Open.getAlbumCovertArt("spotify:album:63fEL4C7P9lpobHelDMalF");
		assertThat(artistCovertArt).isEqualTo(keryJamesCoverArt);
	}

	@Test
	public void play()
	{
		System.out.println(Joiner.on("\n").join(
		FluentIterable.from(Search.searchArtist("wizkid")).transformAndConcat(new Function<Artist, Iterable<Album>>()
		{
			public Iterable<Album> apply(Artist artist)
			{
				return artist.fetch().getAlbums();
			}
		}).transform(new Function<Album, String>()
		{
			public String apply(Album album)
			{
				try
				{
					return Open.getAlbumCovertArt(album.getHref());
				}
				catch ( IOException e )
				{
					return "fail";
				}
			}
		})));
	}
}
